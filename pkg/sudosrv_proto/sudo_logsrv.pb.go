// Filename: pkg/sudosrv_proto/sudo_logsrv.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v3.21.12
// source: sudo_logsrv.proto

package sudosrv_proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Wrapper for all messages sent from client to server.
type ClientMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Type:
	//
	//	*ClientMessage_AcceptMsg
	//	*ClientMessage_RejectMsg
	//	*ClientMessage_ExitMsg
	//	*ClientMessage_RestartMsg
	//	*ClientMessage_AlertMsg
	//	*ClientMessage_TtyinBuf
	//	*ClientMessage_TtyoutBuf
	//	*ClientMessage_StdinBuf
	//	*ClientMessage_StdoutBuf
	//	*ClientMessage_StderrBuf
	//	*ClientMessage_WinsizeEvent
	//	*ClientMessage_SuspendEvent
	//	*ClientMessage_HelloMsg
	Type isClientMessage_Type `protobuf_oneof:"type"`
}

func (x *ClientMessage) Reset() {
	*x = ClientMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_logsrv_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientMessage) ProtoMessage() {}

func (x *ClientMessage) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_logsrv_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientMessage.ProtoReflect.Descriptor instead.
func (*ClientMessage) Descriptor() ([]byte, []int) {
	return file_sudo_logsrv_proto_rawDescGZIP(), []int{0}
}

func (m *ClientMessage) GetType() isClientMessage_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *ClientMessage) GetAcceptMsg() *AcceptMessage {
	if x, ok := x.GetType().(*ClientMessage_AcceptMsg); ok {
		return x.AcceptMsg
	}
	return nil
}

func (x *ClientMessage) GetRejectMsg() *RejectMessage {
	if x, ok := x.GetType().(*ClientMessage_RejectMsg); ok {
		return x.RejectMsg
	}
	return nil
}

func (x *ClientMessage) GetExitMsg() *ExitMessage {
	if x, ok := x.GetType().(*ClientMessage_ExitMsg); ok {
		return x.ExitMsg
	}
	return nil
}

func (x *ClientMessage) GetRestartMsg() *RestartMessage {
	if x, ok := x.GetType().(*ClientMessage_RestartMsg); ok {
		return x.RestartMsg
	}
	return nil
}

func (x *ClientMessage) GetAlertMsg() *AlertMessage {
	if x, ok := x.GetType().(*ClientMessage_AlertMsg); ok {
		return x.AlertMsg
	}
	return nil
}

func (x *ClientMessage) GetTtyinBuf() *IoBuffer {
	if x, ok := x.GetType().(*ClientMessage_TtyinBuf); ok {
		return x.TtyinBuf
	}
	return nil
}

func (x *ClientMessage) GetTtyoutBuf() *IoBuffer {
	if x, ok := x.GetType().(*ClientMessage_TtyoutBuf); ok {
		return x.TtyoutBuf
	}
	return nil
}

func (x *ClientMessage) GetStdinBuf() *IoBuffer {
	if x, ok := x.GetType().(*ClientMessage_StdinBuf); ok {
		return x.StdinBuf
	}
	return nil
}

func (x *ClientMessage) GetStdoutBuf() *IoBuffer {
	if x, ok := x.GetType().(*ClientMessage_StdoutBuf); ok {
		return x.StdoutBuf
	}
	return nil
}

func (x *ClientMessage) GetStderrBuf() *IoBuffer {
	if x, ok := x.GetType().(*ClientMessage_StderrBuf); ok {
		return x.StderrBuf
	}
	return nil
}

func (x *ClientMessage) GetWinsizeEvent() *ChangeWindowSize {
	if x, ok := x.GetType().(*ClientMessage_WinsizeEvent); ok {
		return x.WinsizeEvent
	}
	return nil
}

func (x *ClientMessage) GetSuspendEvent() *CommandSuspend {
	if x, ok := x.GetType().(*ClientMessage_SuspendEvent); ok {
		return x.SuspendEvent
	}
	return nil
}

func (x *ClientMessage) GetHelloMsg() *ClientHello {
	if x, ok := x.GetType().(*ClientMessage_HelloMsg); ok {
		return x.HelloMsg
	}
	return nil
}

type isClientMessage_Type interface {
	isClientMessage_Type()
}

type ClientMessage_AcceptMsg struct {
	AcceptMsg *AcceptMessage `protobuf:"bytes,1,opt,name=accept_msg,json=acceptMsg,proto3,oneof"`
}

type ClientMessage_RejectMsg struct {
	RejectMsg *RejectMessage `protobuf:"bytes,2,opt,name=reject_msg,json=rejectMsg,proto3,oneof"`
}

type ClientMessage_ExitMsg struct {
	ExitMsg *ExitMessage `protobuf:"bytes,3,opt,name=exit_msg,json=exitMsg,proto3,oneof"`
}

type ClientMessage_RestartMsg struct {
	RestartMsg *RestartMessage `protobuf:"bytes,4,opt,name=restart_msg,json=restartMsg,proto3,oneof"`
}

type ClientMessage_AlertMsg struct {
	AlertMsg *AlertMessage `protobuf:"bytes,5,opt,name=alert_msg,json=alertMsg,proto3,oneof"`
}

type ClientMessage_TtyinBuf struct {
	TtyinBuf *IoBuffer `protobuf:"bytes,6,opt,name=ttyin_buf,json=ttyinBuf,proto3,oneof"`
}

type ClientMessage_TtyoutBuf struct {
	TtyoutBuf *IoBuffer `protobuf:"bytes,7,opt,name=ttyout_buf,json=ttyoutBuf,proto3,oneof"`
}

type ClientMessage_StdinBuf struct {
	StdinBuf *IoBuffer `protobuf:"bytes,8,opt,name=stdin_buf,json=stdinBuf,proto3,oneof"`
}

type ClientMessage_StdoutBuf struct {
	StdoutBuf *IoBuffer `protobuf:"bytes,9,opt,name=stdout_buf,json=stdoutBuf,proto3,oneof"`
}

type ClientMessage_StderrBuf struct {
	StderrBuf *IoBuffer `protobuf:"bytes,10,opt,name=stderr_buf,json=stderrBuf,proto3,oneof"`
}

type ClientMessage_WinsizeEvent struct {
	WinsizeEvent *ChangeWindowSize `protobuf:"bytes,11,opt,name=winsize_event,json=winsizeEvent,proto3,oneof"`
}

type ClientMessage_SuspendEvent struct {
	SuspendEvent *CommandSuspend `protobuf:"bytes,12,opt,name=suspend_event,json=suspendEvent,proto3,oneof"`
}

type ClientMessage_HelloMsg struct {
	HelloMsg *ClientHello `protobuf:"bytes,13,opt,name=hello_msg,json=helloMsg,proto3,oneof"`
}

func (*ClientMessage_AcceptMsg) isClientMessage_Type() {}

func (*ClientMessage_RejectMsg) isClientMessage_Type() {}

func (*ClientMessage_ExitMsg) isClientMessage_Type() {}

func (*ClientMessage_RestartMsg) isClientMessage_Type() {}

func (*ClientMessage_AlertMsg) isClientMessage_Type() {}

func (*ClientMessage_TtyinBuf) isClientMessage_Type() {}

func (*ClientMessage_TtyoutBuf) isClientMessage_Type() {}

func (*ClientMessage_StdinBuf) isClientMessage_Type() {}

func (*ClientMessage_StdoutBuf) isClientMessage_Type() {}

func (*ClientMessage_StderrBuf) isClientMessage_Type() {}

func (*ClientMessage_WinsizeEvent) isClientMessage_Type() {}

func (*ClientMessage_SuspendEvent) isClientMessage_Type() {}

func (*ClientMessage_HelloMsg) isClientMessage_Type() {}

// Wrapper for all messages sent from server to client.
type ServerMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Type:
	//
	//	*ServerMessage_Hello
	//	*ServerMessage_CommitPoint
	//	*ServerMessage_LogId
	//	*ServerMessage_Error
	//	*ServerMessage_Abort
	Type isServerMessage_Type `protobuf_oneof:"type"`
}

func (x *ServerMessage) Reset() {
	*x = ServerMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_logsrv_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerMessage) ProtoMessage() {}

func (x *ServerMessage) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_logsrv_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerMessage.ProtoReflect.Descriptor instead.
func (*ServerMessage) Descriptor() ([]byte, []int) {
	return file_sudo_logsrv_proto_rawDescGZIP(), []int{1}
}

func (m *ServerMessage) GetType() isServerMessage_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *ServerMessage) GetHello() *ServerHello {
	if x, ok := x.GetType().(*ServerMessage_Hello); ok {
		return x.Hello
	}
	return nil
}

func (x *ServerMessage) GetCommitPoint() *TimeSpec {
	if x, ok := x.GetType().(*ServerMessage_CommitPoint); ok {
		return x.CommitPoint
	}
	return nil
}

func (x *ServerMessage) GetLogId() string {
	if x, ok := x.GetType().(*ServerMessage_LogId); ok {
		return x.LogId
	}
	return ""
}

func (x *ServerMessage) GetError() string {
	if x, ok := x.GetType().(*ServerMessage_Error); ok {
		return x.Error
	}
	return ""
}

func (x *ServerMessage) GetAbort() string {
	if x, ok := x.GetType().(*ServerMessage_Abort); ok {
		return x.Abort
	}
	return ""
}

type isServerMessage_Type interface {
	isServerMessage_Type()
}

type ServerMessage_Hello struct {
	Hello *ServerHello `protobuf:"bytes,1,opt,name=hello,proto3,oneof"`
}

type ServerMessage_CommitPoint struct {
	CommitPoint *TimeSpec `protobuf:"bytes,2,opt,name=commit_point,json=commitPoint,proto3,oneof"`
}

type ServerMessage_LogId struct {
	LogId string `protobuf:"bytes,3,opt,name=log_id,json=logId,proto3,oneof"`
}

type ServerMessage_Error struct {
	Error string `protobuf:"bytes,4,opt,name=error,proto3,oneof"`
}

type ServerMessage_Abort struct {
	Abort string `protobuf:"bytes,5,opt,name=abort,proto3,oneof"`
}

func (*ServerMessage_Hello) isServerMessage_Type() {}

func (*ServerMessage_CommitPoint) isServerMessage_Type() {}

func (*ServerMessage_LogId) isServerMessage_Type() {}

func (*ServerMessage_Error) isServerMessage_Type() {}

func (*ServerMessage_Abort) isServerMessage_Type() {}

// Time specification, matches struct timespec
type TimeSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TvSec  int64 `protobuf:"varint,1,opt,name=tv_sec,json=tvSec,proto3" json:"tv_sec,omitempty"`
	TvNsec int32 `protobuf:"varint,2,opt,name=tv_nsec,json=tvNsec,proto3" json:"tv_nsec,omitempty"`
}

func (x *TimeSpec) Reset() {
	*x = TimeSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_logsrv_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeSpec) ProtoMessage() {}

func (x *TimeSpec) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_logsrv_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeSpec.ProtoReflect.Descriptor instead.
func (*TimeSpec) Descriptor() ([]byte, []int) {
	return file_sudo_logsrv_proto_rawDescGZIP(), []int{2}
}

func (x *TimeSpec) GetTvSec() int64 {
	if x != nil {
		return x.TvSec
	}
	return 0
}

func (x *TimeSpec) GetTvNsec() int32 {
	if x != nil {
		return x.TvNsec
	}
	return 0
}

// Key-value pairs used in other messages.
type InfoMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// Types that are assignable to Value:
	//
	//	*InfoMessage_Numval
	//	*InfoMessage_Strval
	//	*InfoMessage_Strlistval
	//	*InfoMessage_Numlistval
	Value isInfoMessage_Value `protobuf_oneof:"value"`
}

func (x *InfoMessage) Reset() {
	*x = InfoMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_logsrv_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InfoMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoMessage) ProtoMessage() {}

func (x *InfoMessage) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_logsrv_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoMessage.ProtoReflect.Descriptor instead.
func (*InfoMessage) Descriptor() ([]byte, []int) {
	return file_sudo_logsrv_proto_rawDescGZIP(), []int{3}
}

func (x *InfoMessage) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (m *InfoMessage) GetValue() isInfoMessage_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *InfoMessage) GetNumval() int64 {
	if x, ok := x.GetValue().(*InfoMessage_Numval); ok {
		return x.Numval
	}
	return 0
}

func (x *InfoMessage) GetStrval() string {
	if x, ok := x.GetValue().(*InfoMessage_Strval); ok {
		return x.Strval
	}
	return ""
}

func (x *InfoMessage) GetStrlistval() *InfoMessage_StringList {
	if x, ok := x.GetValue().(*InfoMessage_Strlistval); ok {
		return x.Strlistval
	}
	return nil
}

func (x *InfoMessage) GetNumlistval() *InfoMessage_NumberList {
	if x, ok := x.GetValue().(*InfoMessage_Numlistval); ok {
		return x.Numlistval
	}
	return nil
}

type isInfoMessage_Value interface {
	isInfoMessage_Value()
}

type InfoMessage_Numval struct {
	Numval int64 `protobuf:"varint,2,opt,name=numval,proto3,oneof"`
}

type InfoMessage_Strval struct {
	Strval string `protobuf:"bytes,3,opt,name=strval,proto3,oneof"`
}

type InfoMessage_Strlistval struct {
	Strlistval *InfoMessage_StringList `protobuf:"bytes,4,opt,name=strlistval,proto3,oneof"`
}

type InfoMessage_Numlistval struct {
	Numlistval *InfoMessage_NumberList `protobuf:"bytes,5,opt,name=numlistval,proto3,oneof"`
}

func (*InfoMessage_Numval) isInfoMessage_Value() {}

func (*InfoMessage_Strval) isInfoMessage_Value() {}

func (*InfoMessage_Strlistval) isInfoMessage_Value() {}

func (*InfoMessage_Numlistval) isInfoMessage_Value() {}

// A list of strings
type StringList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Strings []string `protobuf:"bytes,1,rep,name=strings,proto3" json:"strings,omitempty"`
}

func (x *StringList) Reset() {
	*x = StringList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_logsrv_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StringList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringList) ProtoMessage() {}

func (x *StringList) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_logsrv_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringList.ProtoReflect.Descriptor instead.
func (*StringList) Descriptor() ([]byte, []int) {
	return file_sudo_logsrv_proto_rawDescGZIP(), []int{4}
}

func (x *StringList) GetStrings() []string {
	if x != nil {
		return x.Strings
	}
	return nil
}

// A list of numbers
type NumberList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Numbers []int64 `protobuf:"varint,1,rep,packed,name=numbers,proto3" json:"numbers,omitempty"`
}

func (x *NumberList) Reset() {
	*x = NumberList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_logsrv_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NumberList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NumberList) ProtoMessage() {}

func (x *NumberList) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_logsrv_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NumberList.ProtoReflect.Descriptor instead.
func (*NumberList) Descriptor() ([]byte, []int) {
	return file_sudo_logsrv_proto_rawDescGZIP(), []int{5}
}

func (x *NumberList) GetNumbers() []int64 {
	if x != nil {
		return x.Numbers
	}
	return nil
}

// Initial client handshake.
type ClientHello struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId string `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
}

func (x *ClientHello) Reset() {
	*x = ClientHello{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_logsrv_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientHello) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientHello) ProtoMessage() {}

func (x *ClientHello) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_logsrv_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientHello.ProtoReflect.Descriptor instead.
func (*ClientHello) Descriptor() ([]byte, []int) {
	return file_sudo_logsrv_proto_rawDescGZIP(), []int{6}
}

func (x *ClientHello) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

// Initial server handshake.
type ServerHello struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerId    string   `protobuf:"bytes,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	Redirect    string   `protobuf:"bytes,2,opt,name=redirect,proto3" json:"redirect,omitempty"`
	Servers     []string `protobuf:"bytes,3,rep,name=servers,proto3" json:"servers,omitempty"`
	Subcommands bool     `protobuf:"varint,4,opt,name=subcommands,proto3" json:"subcommands,omitempty"`
}

func (x *ServerHello) Reset() {
	*x = ServerHello{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_logsrv_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerHello) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerHello) ProtoMessage() {}

func (x *ServerHello) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_logsrv_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerHello.ProtoReflect.Descriptor instead.
func (*ServerHello) Descriptor() ([]byte, []int) {
	return file_sudo_logsrv_proto_rawDescGZIP(), []int{7}
}

func (x *ServerHello) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *ServerHello) GetRedirect() string {
	if x != nil {
		return x.Redirect
	}
	return ""
}

func (x *ServerHello) GetServers() []string {
	if x != nil {
		return x.Servers
	}
	return nil
}

func (x *ServerHello) GetSubcommands() bool {
	if x != nil {
		return x.Subcommands
	}
	return false
}

// Command accepted by the security policy.
type AcceptMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubmitTime   *TimeSpec      `protobuf:"bytes,1,opt,name=submit_time,json=submitTime,proto3" json:"submit_time,omitempty"`
	InfoMsgs     []*InfoMessage `protobuf:"bytes,2,rep,name=info_msgs,json=infoMsgs,proto3" json:"info_msgs,omitempty"`
	ExpectIobufs bool           `protobuf:"varint,3,opt,name=expect_iobufs,json=expectIobufs,proto3" json:"expect_iobufs,omitempty"`
}

func (x *AcceptMessage) Reset() {
	*x = AcceptMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_logsrv_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcceptMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptMessage) ProtoMessage() {}

func (x *AcceptMessage) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_logsrv_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptMessage.ProtoReflect.Descriptor instead.
func (*AcceptMessage) Descriptor() ([]byte, []int) {
	return file_sudo_logsrv_proto_rawDescGZIP(), []int{8}
}

func (x *AcceptMessage) GetSubmitTime() *TimeSpec {
	if x != nil {
		return x.SubmitTime
	}
	return nil
}

func (x *AcceptMessage) GetInfoMsgs() []*InfoMessage {
	if x != nil {
		return x.InfoMsgs
	}
	return nil
}

func (x *AcceptMessage) GetExpectIobufs() bool {
	if x != nil {
		return x.ExpectIobufs
	}
	return false
}

// Command rejected by the security policy.
type RejectMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubmitTime *TimeSpec      `protobuf:"bytes,1,opt,name=submit_time,json=submitTime,proto3" json:"submit_time,omitempty"`
	Reason     string         `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	InfoMsgs   []*InfoMessage `protobuf:"bytes,3,rep,name=info_msgs,json=infoMsgs,proto3" json:"info_msgs,omitempty"`
}

func (x *RejectMessage) Reset() {
	*x = RejectMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_logsrv_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RejectMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RejectMessage) ProtoMessage() {}

func (x *RejectMessage) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_logsrv_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RejectMessage.ProtoReflect.Descriptor instead.
func (*RejectMessage) Descriptor() ([]byte, []int) {
	return file_sudo_logsrv_proto_rawDescGZIP(), []int{9}
}

func (x *RejectMessage) GetSubmitTime() *TimeSpec {
	if x != nil {
		return x.SubmitTime
	}
	return nil
}

func (x *RejectMessage) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *RejectMessage) GetInfoMsgs() []*InfoMessage {
	if x != nil {
		return x.InfoMsgs
	}
	return nil
}

// Command exit status.
type ExitMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RunTime    *TimeSpec `protobuf:"bytes,1,opt,name=run_time,json=runTime,proto3" json:"run_time,omitempty"`
	ExitValue  int32     `protobuf:"varint,2,opt,name=exit_value,json=exitValue,proto3" json:"exit_value,omitempty"`
	DumpedCore bool      `protobuf:"varint,3,opt,name=dumped_core,json=dumpedCore,proto3" json:"dumped_core,omitempty"`
	Signal     string    `protobuf:"bytes,4,opt,name=signal,proto3" json:"signal,omitempty"`
	Error      string    `protobuf:"bytes,5,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *ExitMessage) Reset() {
	*x = ExitMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_logsrv_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExitMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExitMessage) ProtoMessage() {}

func (x *ExitMessage) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_logsrv_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExitMessage.ProtoReflect.Descriptor instead.
func (*ExitMessage) Descriptor() ([]byte, []int) {
	return file_sudo_logsrv_proto_rawDescGZIP(), []int{10}
}

func (x *ExitMessage) GetRunTime() *TimeSpec {
	if x != nil {
		return x.RunTime
	}
	return nil
}

func (x *ExitMessage) GetExitValue() int32 {
	if x != nil {
		return x.ExitValue
	}
	return 0
}

func (x *ExitMessage) GetDumpedCore() bool {
	if x != nil {
		return x.DumpedCore
	}
	return false
}

func (x *ExitMessage) GetSignal() string {
	if x != nil {
		return x.Signal
	}
	return ""
}

func (x *ExitMessage) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// Request to resume a pre-existing I/O log session.
type RestartMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogId       string    `protobuf:"bytes,1,opt,name=log_id,json=logId,proto3" json:"log_id,omitempty"`
	ResumePoint *TimeSpec `protobuf:"bytes,2,opt,name=resume_point,json=resumePoint,proto3" json:"resume_point,omitempty"`
}

func (x *RestartMessage) Reset() {
	*x = RestartMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_logsrv_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestartMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestartMessage) ProtoMessage() {}

func (x *RestartMessage) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_logsrv_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestartMessage.ProtoReflect.Descriptor instead.
func (*RestartMessage) Descriptor() ([]byte, []int) {
	return file_sudo_logsrv_proto_rawDescGZIP(), []int{11}
}

func (x *RestartMessage) GetLogId() string {
	if x != nil {
		return x.LogId
	}
	return ""
}

func (x *RestartMessage) GetResumePoint() *TimeSpec {
	if x != nil {
		return x.ResumePoint
	}
	return nil
}

// Security alert from the security policy plugin.
type AlertMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlertTime *TimeSpec      `protobuf:"bytes,1,opt,name=alert_time,json=alertTime,proto3" json:"alert_time,omitempty"`
	Reason    string         `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	InfoMsgs  []*InfoMessage `protobuf:"bytes,3,rep,name=info_msgs,json=infoMsgs,proto3" json:"info_msgs,omitempty"`
}

func (x *AlertMessage) Reset() {
	*x = AlertMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_logsrv_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertMessage) ProtoMessage() {}

func (x *AlertMessage) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_logsrv_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertMessage.ProtoReflect.Descriptor instead.
func (*AlertMessage) Descriptor() ([]byte, []int) {
	return file_sudo_logsrv_proto_rawDescGZIP(), []int{12}
}

func (x *AlertMessage) GetAlertTime() *TimeSpec {
	if x != nil {
		return x.AlertTime
	}
	return nil
}

func (x *AlertMessage) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *AlertMessage) GetInfoMsgs() []*InfoMessage {
	if x != nil {
		return x.InfoMsgs
	}
	return nil
}

// An I/O buffer.
type IoBuffer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Delay *TimeSpec `protobuf:"bytes,1,opt,name=delay,proto3" json:"delay,omitempty"`
	Data  []byte    `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *IoBuffer) Reset() {
	*x = IoBuffer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_logsrv_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IoBuffer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IoBuffer) ProtoMessage() {}

func (x *IoBuffer) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_logsrv_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IoBuffer.ProtoReflect.Descriptor instead.
func (*IoBuffer) Descriptor() ([]byte, []int) {
	return file_sudo_logsrv_proto_rawDescGZIP(), []int{13}
}

func (x *IoBuffer) GetDelay() *TimeSpec {
	if x != nil {
		return x.Delay
	}
	return nil
}

func (x *IoBuffer) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// New window size from client.
type ChangeWindowSize struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Delay *TimeSpec `protobuf:"bytes,1,opt,name=delay,proto3" json:"delay,omitempty"`
	Rows  int32     `protobuf:"varint,2,opt,name=rows,proto3" json:"rows,omitempty"`
	Cols  int32     `protobuf:"varint,3,opt,name=cols,proto3" json:"cols,omitempty"`
}

func (x *ChangeWindowSize) Reset() {
	*x = ChangeWindowSize{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_logsrv_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeWindowSize) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeWindowSize) ProtoMessage() {}

func (x *ChangeWindowSize) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_logsrv_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeWindowSize.ProtoReflect.Descriptor instead.
func (*ChangeWindowSize) Descriptor() ([]byte, []int) {
	return file_sudo_logsrv_proto_rawDescGZIP(), []int{14}
}

func (x *ChangeWindowSize) GetDelay() *TimeSpec {
	if x != nil {
		return x.Delay
	}
	return nil
}

func (x *ChangeWindowSize) GetRows() int32 {
	if x != nil {
		return x.Rows
	}
	return 0
}

func (x *ChangeWindowSize) GetCols() int32 {
	if x != nil {
		return x.Cols
	}
	return 0
}

// Command suspended or continued.
type CommandSuspend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Delay  *TimeSpec `protobuf:"bytes,1,opt,name=delay,proto3" json:"delay,omitempty"`
	Signal string    `protobuf:"bytes,2,opt,name=signal,proto3" json:"signal,omitempty"`
}

func (x *CommandSuspend) Reset() {
	*x = CommandSuspend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_logsrv_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandSuspend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandSuspend) ProtoMessage() {}

func (x *CommandSuspend) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_logsrv_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandSuspend.ProtoReflect.Descriptor instead.
func (*CommandSuspend) Descriptor() ([]byte, []int) {
	return file_sudo_logsrv_proto_rawDescGZIP(), []int{15}
}

func (x *CommandSuspend) GetDelay() *TimeSpec {
	if x != nil {
		return x.Delay
	}
	return nil
}

func (x *CommandSuspend) GetSignal() string {
	if x != nil {
		return x.Signal
	}
	return ""
}

type InfoMessage_StringList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Strings []string `protobuf:"bytes,1,rep,name=strings,proto3" json:"strings,omitempty"`
}

func (x *InfoMessage_StringList) Reset() {
	*x = InfoMessage_StringList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_logsrv_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InfoMessage_StringList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoMessage_StringList) ProtoMessage() {}

func (x *InfoMessage_StringList) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_logsrv_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoMessage_StringList.ProtoReflect.Descriptor instead.
func (*InfoMessage_StringList) Descriptor() ([]byte, []int) {
	return file_sudo_logsrv_proto_rawDescGZIP(), []int{3, 0}
}

func (x *InfoMessage_StringList) GetStrings() []string {
	if x != nil {
		return x.Strings
	}
	return nil
}

type InfoMessage_NumberList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Numbers []int64 `protobuf:"varint,1,rep,packed,name=numbers,proto3" json:"numbers,omitempty"`
}

func (x *InfoMessage_NumberList) Reset() {
	*x = InfoMessage_NumberList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_logsrv_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InfoMessage_NumberList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoMessage_NumberList) ProtoMessage() {}

func (x *InfoMessage_NumberList) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_logsrv_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoMessage_NumberList.ProtoReflect.Descriptor instead.
func (*InfoMessage_NumberList) Descriptor() ([]byte, []int) {
	return file_sudo_logsrv_proto_rawDescGZIP(), []int{3, 1}
}

func (x *InfoMessage_NumberList) GetNumbers() []int64 {
	if x != nil {
		return x.Numbers
	}
	return nil
}

var File_sudo_logsrv_proto protoreflect.FileDescriptor

var file_sudo_logsrv_proto_rawDesc = []byte{
	0x0a, 0x11, 0x73, 0x75, 0x64, 0x6f, 0x5f, 0x6c, 0x6f, 0x67, 0x73, 0x72, 0x76, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x73, 0x75, 0x64, 0x6f, 0x73, 0x72, 0x76, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xb3, 0x06, 0x0a, 0x0d, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x3d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x5f, 0x6d,
	0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x73,
	0x72, 0x76, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x09, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74,
	0x4d, 0x73, 0x67, 0x12, 0x3d, 0x0a, 0x0a, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x73, 0x72,
	0x76, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x09, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x4d,
	0x73, 0x67, 0x12, 0x37, 0x0a, 0x08, 0x65, 0x78, 0x69, 0x74, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x73, 0x72, 0x76, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x78, 0x69, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x48, 0x00, 0x52, 0x07, 0x65, 0x78, 0x69, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x40, 0x0a, 0x0b, 0x72,
	0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x73, 0x72, 0x76, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48,
	0x00, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x3a, 0x0a,
	0x09, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x73, 0x72, 0x76, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52,
	0x08, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x36, 0x0a, 0x09, 0x74, 0x74, 0x79,
	0x69, 0x6e, 0x5f, 0x62, 0x75, 0x66, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73,
	0x75, 0x64, 0x6f, 0x73, 0x72, 0x76, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6f, 0x42,
	0x75, 0x66, 0x66, 0x65, 0x72, 0x48, 0x00, 0x52, 0x08, 0x74, 0x74, 0x79, 0x69, 0x6e, 0x42, 0x75,
	0x66, 0x12, 0x38, 0x0a, 0x0a, 0x74, 0x74, 0x79, 0x6f, 0x75, 0x74, 0x5f, 0x62, 0x75, 0x66, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x73, 0x72, 0x76, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6f, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x48, 0x00,
	0x52, 0x09, 0x74, 0x74, 0x79, 0x6f, 0x75, 0x74, 0x42, 0x75, 0x66, 0x12, 0x36, 0x0a, 0x09, 0x73,
	0x74, 0x64, 0x69, 0x6e, 0x5f, 0x62, 0x75, 0x66, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x73, 0x75, 0x64, 0x6f, 0x73, 0x72, 0x76, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49,
	0x6f, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x48, 0x00, 0x52, 0x08, 0x73, 0x74, 0x64, 0x69, 0x6e,
	0x42, 0x75, 0x66, 0x12, 0x38, 0x0a, 0x0a, 0x73, 0x74, 0x64, 0x6f, 0x75, 0x74, 0x5f, 0x62, 0x75,
	0x66, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x73, 0x72,
	0x76, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6f, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72,
	0x48, 0x00, 0x52, 0x09, 0x73, 0x74, 0x64, 0x6f, 0x75, 0x74, 0x42, 0x75, 0x66, 0x12, 0x38, 0x0a,
	0x0a, 0x73, 0x74, 0x64, 0x65, 0x72, 0x72, 0x5f, 0x62, 0x75, 0x66, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x73, 0x72, 0x76, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x49, 0x6f, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x48, 0x00, 0x52, 0x09, 0x73, 0x74,
	0x64, 0x65, 0x72, 0x72, 0x42, 0x75, 0x66, 0x12, 0x46, 0x0a, 0x0d, 0x77, 0x69, 0x6e, 0x73, 0x69,
	0x7a, 0x65, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x73, 0x75, 0x64, 0x6f, 0x73, 0x72, 0x76, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x53, 0x69, 0x7a, 0x65, 0x48,
	0x00, 0x52, 0x0c, 0x77, 0x69, 0x6e, 0x73, 0x69, 0x7a, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12,
	0x44, 0x0a, 0x0d, 0x73, 0x75, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x73, 0x72, 0x76,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x53, 0x75,
	0x73, 0x70, 0x65, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x0c, 0x73, 0x75, 0x73, 0x70, 0x65, 0x6e, 0x64,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x39, 0x0a, 0x09, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x5f, 0x6d,
	0x73, 0x67, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x73,
	0x72, 0x76, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x48,
	0x65, 0x6c, 0x6c, 0x6f, 0x48, 0x00, 0x52, 0x08, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x4d, 0x73, 0x67,
	0x42, 0x06, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xd2, 0x01, 0x0a, 0x0d, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x32, 0x0a, 0x05, 0x68, 0x65,
	0x6c, 0x6c, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x75, 0x64, 0x6f,
	0x73, 0x72, 0x76, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x48, 0x00, 0x52, 0x05, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x12, 0x3c,
	0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x73, 0x72, 0x76, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x70, 0x65, 0x63, 0x48, 0x00, 0x52,
	0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x06,
	0x6c, 0x6f, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05,
	0x6c, 0x6f, 0x67, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x16, 0x0a,
	0x05, 0x61, 0x62, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05,
	0x61, 0x62, 0x6f, 0x72, 0x74, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x3a, 0x0a,
	0x08, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x70, 0x65, 0x63, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x76, 0x5f,
	0x73, 0x65, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x76, 0x53, 0x65, 0x63,
	0x12, 0x17, 0x0a, 0x07, 0x74, 0x76, 0x5f, 0x6e, 0x73, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x74, 0x76, 0x4e, 0x73, 0x65, 0x63, 0x22, 0xbe, 0x02, 0x0a, 0x0b, 0x49, 0x6e,
	0x66, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x18, 0x0a, 0x06, 0x6e,
	0x75, 0x6d, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x06, 0x6e,
	0x75, 0x6d, 0x76, 0x61, 0x6c, 0x12, 0x18, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x76, 0x61, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x73, 0x74, 0x72, 0x76, 0x61, 0x6c, 0x12,
	0x47, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x6c, 0x69, 0x73, 0x74, 0x76, 0x61, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x73, 0x72, 0x76, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x73, 0x74,
	0x72, 0x6c, 0x69, 0x73, 0x74, 0x76, 0x61, 0x6c, 0x12, 0x47, 0x0a, 0x0a, 0x6e, 0x75, 0x6d, 0x6c,
	0x69, 0x73, 0x74, 0x76, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73,
	0x75, 0x64, 0x6f, 0x73, 0x72, 0x76, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x66,
	0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x6e, 0x75, 0x6d, 0x6c, 0x69, 0x73, 0x74, 0x76, 0x61,
	0x6c, 0x1a, 0x26, 0x0a, 0x0a, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x07, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x73, 0x1a, 0x26, 0x0a, 0x0a, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x73, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x26, 0x0a, 0x0a, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x73, 0x22, 0x26, 0x0a, 0x0a, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x03, 0x52, 0x07, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x22, 0x2a, 0x0a, 0x0b, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x82, 0x01, 0x0a, 0x0b, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x75, 0x62,
	0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b,
	0x73, 0x75, 0x62, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x22, 0xa7, 0x01, 0x0a, 0x0d,
	0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x38, 0x0a,
	0x0b, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x73, 0x72, 0x76, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x70, 0x65, 0x63, 0x52, 0x0a, 0x73, 0x75, 0x62,
	0x6d, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x09, 0x69, 0x6e, 0x66, 0x6f, 0x5f,
	0x6d, 0x73, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x75, 0x64,
	0x6f, 0x73, 0x72, 0x76, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x08, 0x69, 0x6e, 0x66, 0x6f, 0x4d, 0x73, 0x67, 0x73,
	0x12, 0x23, 0x0a, 0x0d, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x6f, 0x62, 0x75, 0x66,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x49,
	0x6f, 0x62, 0x75, 0x66, 0x73, 0x22, 0x9a, 0x01, 0x0a, 0x0d, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x38, 0x0a, 0x0b, 0x73, 0x75, 0x62, 0x6d, 0x69,
	0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73,
	0x75, 0x64, 0x6f, 0x73, 0x72, 0x76, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x53, 0x70, 0x65, 0x63, 0x52, 0x0a, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x37, 0x0a, 0x09, 0x69, 0x6e, 0x66,
	0x6f, 0x5f, 0x6d, 0x73, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73,
	0x75, 0x64, 0x6f, 0x73, 0x72, 0x76, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x66,
	0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x08, 0x69, 0x6e, 0x66, 0x6f, 0x4d, 0x73,
	0x67, 0x73, 0x22, 0xaf, 0x01, 0x0a, 0x0b, 0x45, 0x78, 0x69, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x32, 0x0a, 0x08, 0x72, 0x75, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x73, 0x72, 0x76, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x70, 0x65, 0x63, 0x52, 0x07, 0x72,
	0x75, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x78, 0x69, 0x74, 0x5f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x78, 0x69, 0x74,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x75, 0x6d, 0x70, 0x65, 0x64, 0x5f,
	0x63, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x64, 0x75, 0x6d, 0x70,
	0x65, 0x64, 0x43, 0x6f, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x22, 0x63, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x6c, 0x6f, 0x67, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x49, 0x64, 0x12, 0x3a, 0x0a,
	0x0c, 0x72, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x73, 0x72, 0x76, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x70, 0x65, 0x63, 0x52, 0x0b, 0x72, 0x65,
	0x73, 0x75, 0x6d, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x97, 0x01, 0x0a, 0x0c, 0x41, 0x6c,
	0x65, 0x72, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x36, 0x0a, 0x0a, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x73, 0x75, 0x64, 0x6f, 0x73, 0x72, 0x76, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x53, 0x70, 0x65, 0x63, 0x52, 0x09, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x37, 0x0a, 0x09, 0x69, 0x6e,
	0x66, 0x6f, 0x5f, 0x6d, 0x73, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x73, 0x75, 0x64, 0x6f, 0x73, 0x72, 0x76, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e,
	0x66, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x08, 0x69, 0x6e, 0x66, 0x6f, 0x4d,
	0x73, 0x67, 0x73, 0x22, 0x4d, 0x0a, 0x08, 0x49, 0x6f, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x12,
	0x2d, 0x0a, 0x05, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x73, 0x75, 0x64, 0x6f, 0x73, 0x72, 0x76, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x53, 0x70, 0x65, 0x63, 0x52, 0x05, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x69, 0x0a, 0x10, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x57, 0x69, 0x6e, 0x64,
	0x6f, 0x77, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x2d, 0x0a, 0x05, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x73, 0x72, 0x76, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x70, 0x65, 0x63, 0x52, 0x05,
	0x64, 0x65, 0x6c, 0x61, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x6c,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x6c, 0x73, 0x22, 0x57, 0x0a,
	0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x53, 0x75, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x12,
	0x2d, 0x0a, 0x05, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x73, 0x75, 0x64, 0x6f, 0x73, 0x72, 0x76, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x53, 0x70, 0x65, 0x63, 0x52, 0x05, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x42, 0x1b, 0x5a, 0x19, 0x73, 0x75, 0x64, 0x6f, 0x73, 0x72,
	0x76, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x73, 0x75, 0x64, 0x6f, 0x73, 0x72, 0x76, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sudo_logsrv_proto_rawDescOnce sync.Once
	file_sudo_logsrv_proto_rawDescData = file_sudo_logsrv_proto_rawDesc
)

func file_sudo_logsrv_proto_rawDescGZIP() []byte {
	file_sudo_logsrv_proto_rawDescOnce.Do(func() {
		file_sudo_logsrv_proto_rawDescData = protoimpl.X.CompressGZIP(file_sudo_logsrv_proto_rawDescData)
	})
	return file_sudo_logsrv_proto_rawDescData
}

var file_sudo_logsrv_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_sudo_logsrv_proto_goTypes = []interface{}{
	(*ClientMessage)(nil),          // 0: sudosrv_proto.ClientMessage
	(*ServerMessage)(nil),          // 1: sudosrv_proto.ServerMessage
	(*TimeSpec)(nil),               // 2: sudosrv_proto.TimeSpec
	(*InfoMessage)(nil),            // 3: sudosrv_proto.InfoMessage
	(*StringList)(nil),             // 4: sudosrv_proto.StringList
	(*NumberList)(nil),             // 5: sudosrv_proto.NumberList
	(*ClientHello)(nil),            // 6: sudosrv_proto.ClientHello
	(*ServerHello)(nil),            // 7: sudosrv_proto.ServerHello
	(*AcceptMessage)(nil),          // 8: sudosrv_proto.AcceptMessage
	(*RejectMessage)(nil),          // 9: sudosrv_proto.RejectMessage
	(*ExitMessage)(nil),            // 10: sudosrv_proto.ExitMessage
	(*RestartMessage)(nil),         // 11: sudosrv_proto.RestartMessage
	(*AlertMessage)(nil),           // 12: sudosrv_proto.AlertMessage
	(*IoBuffer)(nil),               // 13: sudosrv_proto.IoBuffer
	(*ChangeWindowSize)(nil),       // 14: sudosrv_proto.ChangeWindowSize
	(*CommandSuspend)(nil),         // 15: sudosrv_proto.CommandSuspend
	(*InfoMessage_StringList)(nil), // 16: sudosrv_proto.InfoMessage.StringList
	(*InfoMessage_NumberList)(nil), // 17: sudosrv_proto.InfoMessage.NumberList
}
var file_sudo_logsrv_proto_depIdxs = []int32{
	8,  // 0: sudosrv_proto.ClientMessage.accept_msg:type_name -> sudosrv_proto.AcceptMessage
	9,  // 1: sudosrv_proto.ClientMessage.reject_msg:type_name -> sudosrv_proto.RejectMessage
	10, // 2: sudosrv_proto.ClientMessage.exit_msg:type_name -> sudosrv_proto.ExitMessage
	11, // 3: sudosrv_proto.ClientMessage.restart_msg:type_name -> sudosrv_proto.RestartMessage
	12, // 4: sudosrv_proto.ClientMessage.alert_msg:type_name -> sudosrv_proto.AlertMessage
	13, // 5: sudosrv_proto.ClientMessage.ttyin_buf:type_name -> sudosrv_proto.IoBuffer
	13, // 6: sudosrv_proto.ClientMessage.ttyout_buf:type_name -> sudosrv_proto.IoBuffer
	13, // 7: sudosrv_proto.ClientMessage.stdin_buf:type_name -> sudosrv_proto.IoBuffer
	13, // 8: sudosrv_proto.ClientMessage.stdout_buf:type_name -> sudosrv_proto.IoBuffer
	13, // 9: sudosrv_proto.ClientMessage.stderr_buf:type_name -> sudosrv_proto.IoBuffer
	14, // 10: sudosrv_proto.ClientMessage.winsize_event:type_name -> sudosrv_proto.ChangeWindowSize
	15, // 11: sudosrv_proto.ClientMessage.suspend_event:type_name -> sudosrv_proto.CommandSuspend
	6,  // 12: sudosrv_proto.ClientMessage.hello_msg:type_name -> sudosrv_proto.ClientHello
	7,  // 13: sudosrv_proto.ServerMessage.hello:type_name -> sudosrv_proto.ServerHello
	2,  // 14: sudosrv_proto.ServerMessage.commit_point:type_name -> sudosrv_proto.TimeSpec
	16, // 15: sudosrv_proto.InfoMessage.strlistval:type_name -> sudosrv_proto.InfoMessage.StringList
	17, // 16: sudosrv_proto.InfoMessage.numlistval:type_name -> sudosrv_proto.InfoMessage.NumberList
	2,  // 17: sudosrv_proto.AcceptMessage.submit_time:type_name -> sudosrv_proto.TimeSpec
	3,  // 18: sudosrv_proto.AcceptMessage.info_msgs:type_name -> sudosrv_proto.InfoMessage
	2,  // 19: sudosrv_proto.RejectMessage.submit_time:type_name -> sudosrv_proto.TimeSpec
	3,  // 20: sudosrv_proto.RejectMessage.info_msgs:type_name -> sudosrv_proto.InfoMessage
	2,  // 21: sudosrv_proto.ExitMessage.run_time:type_name -> sudosrv_proto.TimeSpec
	2,  // 22: sudosrv_proto.RestartMessage.resume_point:type_name -> sudosrv_proto.TimeSpec
	2,  // 23: sudosrv_proto.AlertMessage.alert_time:type_name -> sudosrv_proto.TimeSpec
	3,  // 24: sudosrv_proto.AlertMessage.info_msgs:type_name -> sudosrv_proto.InfoMessage
	2,  // 25: sudosrv_proto.IoBuffer.delay:type_name -> sudosrv_proto.TimeSpec
	2,  // 26: sudosrv_proto.ChangeWindowSize.delay:type_name -> sudosrv_proto.TimeSpec
	2,  // 27: sudosrv_proto.CommandSuspend.delay:type_name -> sudosrv_proto.TimeSpec
	28, // [28:28] is the sub-list for method output_type
	28, // [28:28] is the sub-list for method input_type
	28, // [28:28] is the sub-list for extension type_name
	28, // [28:28] is the sub-list for extension extendee
	0,  // [0:28] is the sub-list for field type_name
}

func init() { file_sudo_logsrv_proto_init() }
func file_sudo_logsrv_proto_init() {
	if File_sudo_logsrv_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sudo_logsrv_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_logsrv_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_logsrv_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_logsrv_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InfoMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_logsrv_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StringList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_logsrv_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NumberList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_logsrv_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientHello); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_logsrv_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerHello); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_logsrv_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcceptMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_logsrv_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RejectMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_logsrv_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExitMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_logsrv_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestartMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_logsrv_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_logsrv_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IoBuffer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_logsrv_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeWindowSize); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_logsrv_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandSuspend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_logsrv_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InfoMessage_StringList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_logsrv_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InfoMessage_NumberList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_sudo_logsrv_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*ClientMessage_AcceptMsg)(nil),
		(*ClientMessage_RejectMsg)(nil),
		(*ClientMessage_ExitMsg)(nil),
		(*ClientMessage_RestartMsg)(nil),
		(*ClientMessage_AlertMsg)(nil),
		(*ClientMessage_TtyinBuf)(nil),
		(*ClientMessage_TtyoutBuf)(nil),
		(*ClientMessage_StdinBuf)(nil),
		(*ClientMessage_StdoutBuf)(nil),
		(*ClientMessage_StderrBuf)(nil),
		(*ClientMessage_WinsizeEvent)(nil),
		(*ClientMessage_SuspendEvent)(nil),
		(*ClientMessage_HelloMsg)(nil),
	}
	file_sudo_logsrv_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*ServerMessage_Hello)(nil),
		(*ServerMessage_CommitPoint)(nil),
		(*ServerMessage_LogId)(nil),
		(*ServerMessage_Error)(nil),
		(*ServerMessage_Abort)(nil),
	}
	file_sudo_logsrv_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*InfoMessage_Numval)(nil),
		(*InfoMessage_Strval)(nil),
		(*InfoMessage_Strlistval)(nil),
		(*InfoMessage_Numlistval)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sudo_logsrv_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_sudo_logsrv_proto_goTypes,
		DependencyIndexes: file_sudo_logsrv_proto_depIdxs,
		MessageInfos:      file_sudo_logsrv_proto_msgTypes,
	}.Build()
	File_sudo_logsrv_proto = out.File
	file_sudo_logsrv_proto_rawDesc = nil
	file_sudo_logsrv_proto_goTypes = nil
	file_sudo_logsrv_proto_depIdxs = nil
}
